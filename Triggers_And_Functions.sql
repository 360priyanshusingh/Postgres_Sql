-- 1 trigger and function :-

select count(student.last_name) from student
select * from student 

INSERT INTO STUDENT(id,first_name,last_name)
values(4,'Roshan','singh');
UPDATE STUDENT SET  id=4,first_name='roshan',last_name='singh' where STUDENT.id=4

CREATE OR REPLACE FUNCTION check_first_name()
RETURNS TRIGGER AS $$ 
BEGIN
      IF LENGTH(NEW.first_name)<5 THEN
	  RAISE EXCEPTION  'FIRST NAME LENGTH SHOUDE BE BIGGER THAN 5';
	  END IF;
	  RETURN NEW ;
END ;
$$ LANGUAGE PLPGSQL;
	  


CREATE OR REPLACE FUNCTION check_last_name()
RETURNS TRIGGER AS $$
BEGIN 
    If NEW.last_name IS NULL OR NEW.last_name= '' THEN
	RAISE EXCEPTION 'lAST NAME CONTNOT BE NULL OR EMPTY';
	END IF;
	RETURN NEW ;
END ;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE FUNCTION check_all_details()
RETURNS TRIGGER AS $$ 
BEGIN 
     IF NEW.id IS NULL THEN 
	 RAISE EXCEPTION 'ID SHOUDE NOT BE NULL PLEASE PROVIDE ID';
	 END IF;
	 IF NEW.first_name IS NULL THEN
	 RAISE EXCEPTION 'FIRST NAME SHOUDE NOT BE NULL';
	 END IF ;
	 IF LENGTH(NEW.first_name)<5 THEN
	 RAISE EXCEPTION 'LENGTH OF FIRST NAME SHOUDE BE MORE 5';
	 END IF ;
	 IF NEW.last_name IS NULL THEN
	 RAISE EXCEPTION 'lAST NAME SHOUDE NOT BE NULL';
	  END IF ;
	 IF LENGTH(NEW.last_name)<5 THEN
	 RAISE EXCEPTION 'LENGTH OF LAST NAME SHOUDE BE MORE 5';
	 END IF ;
	 RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER CHECK_THE_STUDENT
BEFORE INSERT Or UPDATE  ON STUDENT
FOR EACH ROW 
EXECUTE FUNCTION check_all_details()
	 
CREATE TRIGGER BEFORE_INSERT_USER
BEFORE INSERT ON STUDENT
FOR EACH ROW
EXECUTE FUNCTION check_last_name();

CREATE TRIGGER BEFORE_INSERT_STUDENT
BEFORE INSERT ON STUDENT
FOR EACH ROW 
EXECUTE FUNCTION check_first_name();

drop trigger BEFORE_INSERT_USER on student 
drop trigger BEFORE_INSERT_student on student 
drop trigger CHECK_THE_STUDENT on student


	